
in ROOT

err = fn Str-><> FS/write_Str(std_err $);
out = fn Str-><> FS/write_Str(std_out $);

errL = fn Str-><>
  err.$
  err.'\n';

outL = fn Str-><>
  out.$
  out.'\n';


assert = fn <Bool Str>-><>
  if 0@$ ? {}
  { err.'assertion failed: '
    errL(1@$)
    exit.1 };;



outL_Int = fn Int-><>
  FS/write_Int(std_out $)
  FS/write_Str(std_out '\n');


polyfn add;

method add <Int Int>->Int add_Int.$;

;
